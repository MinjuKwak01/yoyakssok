version: '3.1'
services:
  mysql:
    container_name: forever-mysql
    image: mysql:8.0.27
    restart: always
    environment:
      - MYSQL_DATABASE=forever
      - MYSQL_ROOT_HOST=%
      - MYSQL_ROOT_PASSWORD=root
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
        "--skip-character-set-client-handshake",
        "--lower_case_table_names=1",
        "--max_connections=2048",
        "--wait_timeout=3600"
      ]
    healthcheck:
      test: ["CMD", "mysql", "-u", "root", "-proot", "-e", "SELECT 1;"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "13306:3306"
    volumes:
      - /home/ubuntu/db/data:/var/lib/mysql
      - /home/ubuntu/db/config:/etc/mysql/conf.d
      - /home/ubuntu/db/init:/docker-entrypoint-initdb.d
    networks: #사용할 네트워크 지정
      - forever-network
  backend:
    image : minjukwak/forever-prod:latest
    container_name: forever-app
    restart: always
    env_file:
      - ./BE/.env
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://forever-mysql:3306/forever?useSSL=false&serverTimezone=Asia/Seoul&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    networks: #사용할 네트워크 지정
      - forever-network
  fastapi:
    build: ./AI
    container_name: fastapi-server
    networks:
      - forever-network
    ports:
      - "8000:8000"
    env_file:
      - ./AI/.env
    restart: always
  prometheus:
    container_name: forever-prometheus
    image: prom/prometheus:latest
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=1y' # 데이터 보존 기간 설정 (1년: 1y or 365d)
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/metrics"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - forever-network

  grafana:
    container_name: forever-grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    environment:
      GF_SECURITY_ADMIN_PASSWORD: weareforever
      GF_SERVER_ROOT_URL: https://yoyakssok.com/grafana
      GF_USERS_ALLOW_SIGN_UP: false
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - forever-network

    # Node Exporter - 시스템 메트릭 수집
  node-exporter:
    image: prom/node-exporter:latest
    container_name: forever-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - forever-network

  alertmanager:
    container_name: forever-alertmanager
    image: prom/alertmanager:latest
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9093/api/v1/status"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - forever-network

volumes:
  prometheus-data:
    external: true
  grafana-data:
    external: true
  alertmanager-data:
    external: true

networks:
  forever-network:
